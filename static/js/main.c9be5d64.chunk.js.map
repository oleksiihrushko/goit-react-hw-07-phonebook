{"version":3,"sources":["components/contactList/ContactList.module.css","components/contactItem/ContactItem.module.css","components/logo/Logo.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","redux/theme/themeActions.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","service/themeConfig.js","components/logo/Logo.js","components/contactForm/ContactForm.js","components/contactForm/ContactFormContainer.js","components/filter/Filter.js","components/filter/FilterContainer.js","components/contactItem/ContactItem.js","components/contactItem/ContactItemContainer.js","components/contactList/ContactList.js","components/contactList/ContactListContainer.js","components/App.js","components/AppContainer.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js"],"names":["module","exports","changeTheme","createAction","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","removeContact","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","id","delete","getContacts","state","contacts","items","getFilter","filter","getTheme","themeColor","getLoading","loading","getFillteredContacts","createSelector","contact","toLowerCase","includes","themeConfig","light","headerBg","fontColor","bodybg","dark","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","ContactForm","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","find","alert","onSubmit","this","className","contactForm","style","borderRadius","type","onChange","marginBottom","padding","Component","connect","contactsOperations","Filter","onChangeFilter","mapDispatchToProps","contactsSelectors","ContactItem","onRemoveContact","listItem","listItemP","listItemButton","onClick","ownProps","itemMove","enter","enterActive","exit","exitActive","ContactList","TransitionGroup","component","map","key","App","theme","isloadingContacts","themeState","color","background","length","sectionTitle","AppContainer","onFetchContacts","dicpatch","themeActions","createReducer","_","action","payload","combineReducers","themeReducer","store","configureStore","reducer","contactsReducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9be5d64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__lUo-A\",\"enterActive\":\"ContactList_enterActive__3xMGY\",\"exit\":\"ContactList_exit__3fycZ\",\"exitActive\":\"ContactList_exitActive__2RGF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__sO3Lo\",\"listItemP\":\"ContactItem_listItemP__h6tv7\",\"listItemButton\":\"ContactItem_listItemButton__1nK3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2FV8E\",\"appear\":\"Logo_appear__d31NR\",\"appearActive\":\"Logo_appearActive__1OSUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1wVdR\",\"light\":\"App_light__2pVj0\",\"dark\":\"App_dark__2K8wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__rqZm3\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeTheme = createAction('theme/changeTheme');\r\n\r\nexport default { changeTheme };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuid } from 'uuid';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\n// const addContact = createAction('contacts/add', (name, number) => ({\r\n//   payload: {\r\n//     contact: { id: uuid(), name, number },\r\n//   },\r\n// }));\r\n\r\nconst removeContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  // addContact,\r\n  removeContact,\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactRequest());\r\n\r\n  axios('/contacts')\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.fetchContactError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n  axios\r\n    .post('/contacts', {\r\n      name,\r\n      number,\r\n    })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.removeContactError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getTheme = state => state.themeColor;\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFillteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getTheme,\r\n  getLoading,\r\n  getFilter,\r\n  getFillteredContacts,\r\n};\r\n","const themeConfig = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { items } = this.props.state.contacts;\r\n\r\n    if (items && items.find(contact => name === contact.name)) {\r\n      alert('User with this name is already exist');\r\n    } else {\r\n      this.props.onSubmit(name, number);\r\n    }\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            style={{ borderRadius: 4 }}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            style={{ borderRadius: 4, marginBottom: 5 }}\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button style={{ borderRadius: 4, padding: 4 }} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  state,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onSubmit: contactsOperations.addContact,\r\n})(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <form>\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        style={{ borderRadius: 4 }}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      ></input>\r\n    </label>\r\n  </form>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ contact: { name, number }, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={onRemoveContact}\r\n        type=\"button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () =>\r\n    dispatch(contactsOperations.removeContact(ownProps.contact.id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../contactItem/ContactItemContainer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts &&\r\n        contacts.map(contact => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={itemMove}>\r\n            <ContactItem contact={contact} />\r\n          </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => {\r\n  if (state.contacts) {\r\n    return {\r\n      contacts: contactsSelectors.getFillteredContacts(state),\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\n\r\nimport themeConfig from '../service/themeConfig';\r\nimport styles from './App.module.css';\r\nimport Logo from './logo/Logo';\r\nimport ContactForm from './contactForm/ContactFormContainer';\r\nimport Filter from './filter/FilterContainer';\r\nimport ContactList from './contactList/ContactListContainer';\r\n\r\nconst App = ({ contacts, theme, changeTheme, isloadingContacts }) => {\r\n  let themeState = 'light';\r\n  theme ? (themeState = 'light') : (themeState = 'dark');\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[themeState].fontColor,\r\n        background: themeConfig[themeState].bodybg,\r\n      }}\r\n    >\r\n      <Logo />\r\n      {isloadingContacts && <h2>Loading ...</h2>}\r\n      <button onClick={changeTheme}>Change theme</button>\r\n      <ContactForm />\r\n      {contacts && contacts.length > 1 && <Filter />}\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport themeActions from '../redux/theme/themeActions';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport App from './App';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    theme: contactsSelectors.getTheme(state),\r\n    isloadingContacts: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dicpatch => ({\r\n  changeTheme: () => dicpatch(themeActions.changeTheme()),\r\n  onFetchContacts: () => dicpatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst onChangeFilter = (_, action) => action.payload;\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: onAddContact,\r\n  [contactsActions.removeContactSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.fetchContactRequest]: () => true,\r\n  [contactsActions.fetchContactSuccess]: () => false,\r\n  [contactsActions.fetchContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  loading,\r\n  filter,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport themeActions from './themeActions';\r\n\r\nconst themeReducer = createReducer(true, {\r\n  [themeActions.changeTheme]: state => !state,\r\n});\r\n\r\nexport default themeReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    themeColor: themeReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/AppContainer';\r\n// import ThemeContext from './contexts/ThemeContext';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}